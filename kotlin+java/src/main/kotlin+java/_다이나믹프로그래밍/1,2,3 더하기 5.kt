package _다이나믹프로그래밍

fun main() {
    val t = readlnOrNull()?.toInt() ?: return
    val dp = Array(100001){
        LongArray(4){ 0 }
    }
    dp[1] = longArrayOf(0,1,0,0)
    dp[2] = longArrayOf(0,0,1,0)
    dp[3] = longArrayOf(0,1,1,1)

    for (i in 4 until 100001){
        dp[i][1] = (dp[i-1][2] + dp[i-1][3]) % 1000000009
        dp[i][2] = (dp[i-2][1] + dp[i-2][3]) % 1000000009
        dp[i][3] = (dp[i-3][1] + dp[i-3][2]) % 1000000009
    }
    repeat(t){
        val n = readlnOrNull()?.toInt() ?: return
        println(dp[n].sum() % 1000000009)
    }
}

// 0 : 0 -> 0
// 1 : 1  -> 1
// 2 : 2 -> 1
// 3 : 3, 1+2, 2+1 -> 3
// 4 : 1+2+1, 1+3, 3+1 -> 3
// 5 : 2+3, 3+2, 1+3+1,2+1+2  -> 4
// 6 : 1+2+3, 1+3+2, 2+1+3, 2+3+1, 3+1+2, 3+2+1
// 1 2 1 2 , 2 1 2 1  -> 8
// 7  -> 9

//a 0 1 2 3 4 5 6 i
//r 0 1 1 3 3 4 8
//1 0 1 0 1 2 1 3  n[i][1] = n[i-1][2]+n[i-1][3]
//2 0 0 1 1 0 2 3  n[i][2] = n[i-2][1]+n[i-2][3]
//3 0 0 0 1 1 1 2  n[i][3] = n[i-3][1]+n[i-3][2]
//j

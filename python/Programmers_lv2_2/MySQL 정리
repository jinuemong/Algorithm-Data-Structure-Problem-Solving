

# [IF]

select, where 절에서 사용

예시>
select if (10 > 5, "크다", "작다") AS result

# [Order By]

Order by 뒤에 우선순위가 있는 열을 순서대로 적음

# [Like]

where 절과 함께 특정 패턴을 검색할 때 사용

예시>
Select *
From student
where student_id like 'a%';

like 'a%' : a로 시작
like '_a% : 자리수에 a 포함
like 'a_%_%" : a로 시작, 최소 3의 길이

# [IN]

where절 내 여러 값을 설정하고자 할 때 사용
빠른 연산 속도
or과 유사한 효과

예시>
select *
from Customers
where country in ('UK','Korea') (country는 열 속성)

# [Between]

where 절 내 검색 조건으로 범위를 지정할 때 사용
between과 and 사이에 들어가는 값은 ~이상 ~이하 (포함)

예시>
select *
from products
where price between 10 and 20 (not between도 사용 가능)

# [Null 처리]

## [ifnull 사용]
select animal_type, ifnull(name,"no name") as name, sex_upon_intake
from animal_ins

## [coalesce 사용]
select animal_type, coalesce(name,"no name") as name, sex_upon_intake
from animal_ins

# [case 문]

switch - case와 같으며, else 생략 시 null이 나올 수 있다.

예시>
select
    seq,
    case
        when (u.seq between 1 and 3 ) then
            case
                when (u.enabled is true) then a+
                else a0
            end
        when (u.seq between 4 and 6 ) then
            case
                when (u.enabled is true ) then b+
                else b0
            end
        else c+
    end as case_result
from 'user' u


# [limit 문]
select 열
from 테이블
limit 0,3; (0번부터 3개를 셀렉한다)

# [Group By]

집계함수와 함께 사용 되어 결과를 지정한 컬럼에 따라 그룹으로 묶을 때 사용

예시>
select count(id) (집계함수 count 함께 사용)
from customers
group by country (각 도시에 몇명이 사는지 조사)

# [집계함수 모음]

min, max, count, avg, sum

예시>
select count(id) from products...
select branch_name, avg(balance)
from account
group by branch_name
having avg(balance) >= 700; (having : 집계 함수에서 추가 조건 부여 )


# [Union] - 합집합

두 개 이상의 질의 결과를 하나의 테이블로 합치고자 할 때 사용
기본적으로 중복값 제거
중복값을 포함하고 싶은 경우 union all 사용

예시>
select *
from customers
union
select city from orders (desc)
order by city;

# [Join] - 교집합

예시>
select test1.number
from test1 join test2 on test1.number = teste2.number;
: test1과 test2의 number 컬럼을 서로 비교하여 중첩되는 값이 존재하면
  test1.number 컬럼의 중첩 값만 출력한다.

예시2>
select distinct c.card_id (distinct : 데이터 중복 제거)
from cart_products c (cart_products를 c로 치환)
inner join cart_products p on (c.cart_id = p.cart_id)
where (c.name = '우유' and p.name = '요거트')
      or (c.name = '요거트' and p.name = '우유')
order by c.cart_id;


## [왼쪽 or 오른쪽 조인]
왼쪽>
select test1.number
from test1 left join test2 on test1.number = test2.number;

오른쪽>
select test2.number
from test1 right join test2 on test1.number = test2.number;

## [outer join]
매칭 되는 값이 없어도 출력한다.
select test1.*,test2.number
from test1
left outer join test2
on test1.number = test2.number;

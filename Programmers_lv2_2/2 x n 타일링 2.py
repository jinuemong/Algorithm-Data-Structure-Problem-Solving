

# 2 * n 타일링
# 2 * 1 의 타일이 있음
# 1* 2 or 2 * 1 변환 가능
# 2 * n인 바닥을 가득 채우는 수
# 총 경우의 수 출력
# 높이가 2이므로
# 길이가 1이거나 2인 경우를 선택해서 n을 만드는 경우의 수
# Ex n = 4
# 1 1 1 1 , 1 1 2 , 1 2 1 , 2 1 1, 2 2
# n이 최대 60000
# 점화식 발견 -> f(n+2) = f(n+1) + f(n)


def solution(n):
    d = [ 0 for i in range(n)]
    d[0], d[1] = 1,2
    for i in range(2,n):
        d[i] = (d[i-1]+d[i-2])% 1000000007
    return d[-1]

print(solution(5))